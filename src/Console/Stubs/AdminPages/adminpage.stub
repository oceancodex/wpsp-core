<?php

namespace {{ rootNamespace }}\app\Components\AdminPages;

use {{ coreNamespace }}\Base\BaseAdminPage;
use {{ rootNamespace }}\app\Helpers\Constants;

class {{ className }} extends BaseAdminPage {

	public mixed $menuTitle      = '{{ name }}';
//	public mixed $pageTitle      = '{{ name }}';
	public mixed $capability     = 'manage_options';
//	public mixed $menuSlug       = '{{ path_slugify }}';
	public mixed $iconUrl        = 'dashicons-admin-generic';
	public mixed $position       = 2;
//	public mixed $isSubAdminPage = true;
//	public mixed $parentSlug     = 'options-general.php';

//	public mixed $checkDatabase  = null;

	/*
	 *
	 */

//	public function init($path = null): void {
//		$currentTab  = self::$request->get('tab');
//		$currentPage = self::$request->get('page');
//
//		// Custom information before call to parent method "init" .
//		$this->setPageTitle(($currentTab ? trans('messages.' . $currentTab) : trans('messages.dashboard')) . ' - ' . config('app.name'));
//
//		// You must call to parent method "init" if you want to custom it.
//		parent::init();
//
//		// Check database version and maybe redirect.
//		$this->checkDatabase = Migration::checkDatabaseVersion();
//		if (!$this->checkDatabase['result'] && $currentPage == $this->getMenuSlug() && $currentTab !== 'database') {
//			$url = _build_url($this->getParentSlug(), [
//				'page' => $this->getMenuSlug(),
//				'tab'  => 'database',
//			]);
//			wp_redirect($url);
//		}
//	}

	public function customProperties(): void {
//		$this->menuTitle      = '';
//		$this->pageTitle      = '';
//		$this->capability     = '';
//		$this->menuSlug       = '';
//		$this->iconUrl        = '';
//		$this->position       = '';
//		$this->isSubAdminPage = false;
//		$this->parentSlug     = '';
	}

	/*
	 *
	 */

	public function index(): void {
		if (self::$request->get('updated') && $this->parentSlug !== 'options-general.php') {
			_notice(trans('Updated successfully'), 'success');
		}

		$appShortName  = config('app.short_name');
        $requestParams = self::$request->query->all();
        $menuSlug      = $this->getMenuSlug();

        echo view('modules.web.admin-pages.{{ path }}.main', compact('requestParams', 'menuSlug'));
	}

	public function update(): void {
		wp_safe_redirect(wp_get_raw_referer() . '&updated=true');
	}

	/*
	 *
	 */

	public function styles(): void {
//		wp_enqueue_style(config('app.short_name') . '-admin', Constants::getPublicUrl() . '/css/admin.min.css', null, Constants::getVersion());
	}

	public function scripts(): void {
//		wp_enqueue_script(config('app.short_name') . '-database', Constants::getPublicUrl() . '/js/modules/web/admin-pages/wpsp/Database.min.js', null, WPSP_VERSION, true);
	}

	public function localizeScripts(): void {
//		wp_localize_script(config('app.short_name') . '-database', config('app.short_name') . '_localize', [
//			'ajax_url' => admin_url('admin-ajax.php'),
//			'nonce' => wp_create_nonce(config('app.short_name')),
//			'public_url' => Constants::getPublicUrl()
//		]);
	}

}